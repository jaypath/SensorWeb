; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https:;docs.platformio.org/page/projectconf.html

[env]
platform = espressif32@6.5.0
board = um_tinys3
framework = arduino
board_build.mcu = esp32s3
board_build.f_cpu = 240000000L
upload_speed = 921600
lib_deps = 
	SPI
	bblanchon/ArduinoJson@^7.0.3
	paulstoffregen/Time@^1.6.1
	arduino-libraries/NTPClient@^3.2.1
	lovyan03/LovyanGFX@^1.2.0
	mobizt/ESP-Google-Sheet-Client@^1.4.3
build_flags =
	-DBOARD_HAS_PSRAM
	-DCONFIG_SPIRAM_SUPPORT=1
	-mfix-esp32-psram-cache-issue
	-D PLUS=1
	-D LV_MEM_SIZE="(64U * 1024U)"
	-DWEATHER_OPTIMIZATION_ENABLED=1
	-DPARALLEL_REQUESTS_ENABLED=1
	-DWEATHER_CACHE_SIZE=3
	-DMAX_RETRY_ATTEMPTS=3

	;required
	-D MYNAME=\"PleasantWeatherServer\"
	-D _USEUDP=49157
	-D TIMEZERO=1735689600 ;2025-01-01 00:00:00
	-D WDT_TIMEOUT_MS=120000 ;wathdog timeout in milliseconds
	-D NUMDEVICES=50
	-D NUMSENSORS=100
	-D MYTYPE=100
	;-D _USESERIAL=1
	-D _USESPI=1 ;if required for sensors or peripherals
	;-D _USEI2C=1 ;if required for sensors or peripherals
	-D _USETFT=1
	-D _USEWEATHER=1
	-D _USEBATTERY=1
	-D _USEGSHEET=1
	-D _USESDCARD=1

	;peripheral sensors. If _ISPERIPHERAL is defined, then this is a peripheral device and has sensors. All of this must block must be uncommented.
;    -D _ISPERIPHERAL=1
;	-D SENSORNUM=1
;	; for the following, use curly braces and commas to separate values. Need sensornum values to match SENSORTYPES.
;	-D SENSORTYPES={3}
;	-D FLAGSTATES={0b10000011}
;	-D INTERVAL_POLL={300}
;	-D INTERVAL_SEND={1200}
;	-D LIMIT_MAX={200}
;	-D LIMIT_MIN={0}
;	-D SENSORHISTORYSIZE=150
;;note that extra values here will be considered an error.
;/* example:
;  #define SENSORNUM 20
;  #define SENSORTYPES              {3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} ;list of each sensorytype in order. can have zeros for unused sensors, but must init all to the correct sensortypes
;  #define FLAGSTATES               {0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011,0b10000011} ;each element indicates the flag  settings for the ith sensor, ;RMB0 = Flagged, RMB1 = Monitored, RMB2=outside, RMB3-derived/calculated  value, RMB4 =  predictive value, RMB5 = 1 - too high /  0 = too low (only matters when bit0 is 1), RMB6 = flag changed since last read, RMB7 = this sensor is monitored for expiration- alert if no updates received within time limit specified)
;  #define OUTSIDESTATES            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} ;each element indicates outside state for the ith sensor, with 1 means outside, 0 means not outside
;  #define INTERVAL_POLL            {300,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30} ;each ith value is the seconds between polls
;  #define INTERVAL_SEND            {1200,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120} ;each ith value is the seconds between sends
;  #define LIMIT_MAX                {550,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} ;each ith value is the max  for each sensor in NVS
;  #define LIMIT_MIN                {50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} ;each ith value is the min values for each sensor in NVS

    ;uncomment the devices attached!
    ;note: I2c on esp32 is 22=scl and 21=sda; d1=scl and d2=sda on nodemcu. 
	;If using I2C, pin should be -1*address
	;if using SPI, use 100 + pin number
	;if no pin or special case pins, use -10000
  	
	;-D _ISHVAC 1
	;-D _USELED=12 ;uncomment this to use an LED, value is the pin number. Requires LED libraries
    ; -D _USEDHT=-1 ;specify DHT pin
    ;-D _USEAHT=-1 ;specify AHT I2C
    ;-D _USEAHTADA=0x38 ; with bmp combined
    ;-D _USEBMP=-0x77 ;set to 0x76 for stand alone bmp, or 0x77 for combined aht bmp
    ;-D _USEBME=-1 ;specify BME I2C
    ;-D _USEBME680_BSEC=-1 ;specify BME680 I2C with BSEC
    ;-D _USEBME680=-1 ;specify BME680 I2C
    ;-D _USEPOWERPIN=12 ;specify the pin being used for power
    ;-D _USESOILMODULE=A0 ;specify the pin being read for soil moisture
    ;-D _USESOILRES=32 ;use soil resistnace, pin and power specified later
    ;-D _USESOILCAP=32 ;specify soil capacitance sensor pin
    ;-D _USEBARPRED=-1000 ;specify barometric pressure prediction
    ;-D _USEHCSR04=-10000 ;distance
    ;-D _USETFLUNA=134 ; distance
    ;-D _USESSD1306=-1
    ;-D _USELIBATTERY=A0 ;set to the pin that is analogin
    ;-D _USESLABATTERY=A0 ;set to the pin that is analogin
    ;-D _USELOWPOWER=120 ;seconds must also have _USEBATTERY
    ;-D _USELEAK=32 ;specify the pin being used for leak detection reading
    ;-D _CHECKAIRCON=-1
    ;-D _CHECKHEAT=-1 ;check which lines are charged to provide heat
    ;-D _USERELAY=6 ;specify the pin being used for relay, or the mux address if using mux
    ;-D _USEMUX=-1 ;use analog input multiplexor to allow for >6 inputs
    ;-D _USECALIBRATIONMODE=6 ;testing mode




[env:wthrbasev5_USB]
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

[env:wthrbasev5_OTA_100]
upload_protocol = espota
upload_port = 192.168.68.100 --auth=12345678

[env:wthrbasev5_OTA_93]
upload_protocol = espota
upload_port = 192.168.68.93 --auth=12345678
upload_speed = 921600

